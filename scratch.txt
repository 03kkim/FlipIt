To-do:
Use this - (http:
programarcadegames.com/index.php?lang=en&chapter=array_backed_grids) - to build a board UI based on the generation
Add a main menu
Try generalizing the board to allow changing modes and difficulty more easily



Notes:

- Loops should be even lengths, or else the puzzle will not be solvable
- Grid size must therefore be even, or if it is odd, one square must have a 1:odd relationship
- One way to generate the relationships would be to randomly make a list of the numbers 0-15. Transfer each of these twice to a separate list.
- To make 1 big loop, just remove the first element from that list, and move it to the end.
- To make multiple loops, split the list in between two numbers and do the same process for the big loop. (Make sure the len(list)%4 == 0)
- Loops must be greater than 3 units long
Example (failed) board generation:

[{0: [8, 13]}, {1: [5, 15]}, {2: [13, 1]}, {3: [2, 11]},
 {4: [12, 10]}, {5: [1, 12]}, {6: [15, 8]}, {7: [0, 9]},
 {8: [14, 3]}, {9: [6, 2]}, {10: [11, 6]}, {11: [9, 4]},
 {12: [10, 5]}, {13: [3, 7]}, {14: [7, 0]}, {15: [4, 14]}]


Loop #1 (7 long) {0: (8, 13)}, {2: (13, 1)}, {5: (1, 12), {4: (12, 10)}, {12: (10,5)}, {1: (5, 15)}, {6: (15,8)}
Loop #2 (3 long) {3: (2, 11)}, {10: (11, 6)}, {9: (6, 2)}
Loop #3 (6 long) {7: (0, 9)}, {11: (9, 4)}, {15: (4, 14)}, {8: (14, 3)}, {13: (3, 7)}, {14: (7, 0)}

solve for 5 and 11 <== Not solvable

